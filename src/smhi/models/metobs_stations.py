# generated by datamodel-codegen:
#   filename:  https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/1.json
#   timestamp: 2024-03-23T21:07:53+00:00

from __future__ import annotations

from typing import List, Optional, Tuple

from pydantic import BaseModel, Field, field_validator


class MetobsStationLinkItem(BaseModel):
    href: str
    rel: str
    type: str


class MetobsStationSetItem(BaseModel):
    key: Optional[str] = None
    updated: Optional[int] = None
    title: str
    summary: str
    link: List[MetobsStationLinkItem]


class MetobsStationItem(BaseModel):
    key: Optional[str] = None
    updated: Optional[int] = None
    title: str
    summary: str
    link: List[MetobsStationLinkItem]
    name: str
    owner: str
    owner_category: str = Field(..., alias="ownerCategory")
    measuring_stations: str = Field(..., alias="measuringStations")
    id: int
    height: float
    latitude: float
    longitude: float
    active: bool
    from_: int = Field(..., alias="from")
    to: int


class MetobsStationModel(BaseModel):
    key: Optional[str] = None
    updated: Optional[int] = None
    title: str
    summary: str
    unit: str
    value_type: str = Field(..., alias="valueType")
    link: List[MetobsStationLinkItem]
    station_set: List[MetobsStationSetItem] = Field(..., alias="stationSet")
    station: List[MetobsStationItem]

    @field_validator("station")
    @classmethod
    def serialise_station_in_order(cls, station: List[MetobsStationItem]):
        return sorted(station, key=lambda x: int(x.id))

    @property
    def data(self) -> Tuple[Tuple[int, str], ...]:
        return tuple((x.id, x.name) for x in self.station)
